//This is very naive and inefficient solution
class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        set<int>s;
        
        for(int i=0;i<nums.size();i++){
            s.insert(nums[i]);
        }
        set<int>::iterator itr;
        int i=0;
        for (itr = s.begin(); itr != s.end(); itr++) {
            nums[i]=*itr;
            i++;
        }
        for(int j=i;j<nums.size();j++)
        {
            nums[j]=0;
        }
        return i;
    }
};


// Efficient solution using 2 ptr approach
//TC - O(N)
//SC - O(1)

class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        if(nums.size()==0)
            return 0;
        int i=0,j=1;
        for(int j=1;j<nums.size();j++)
        {
            if(nums[i]!=nums[j])
                i++;
            nums[i]=nums[j];
        }
        return i+1;
    }
};
